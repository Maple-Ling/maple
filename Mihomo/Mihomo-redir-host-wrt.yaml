# 机场订阅
proxy-providers:
  自己用:
    type: http
    interval: 3600
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 60
    proxy: 🚅 直连
    url: "https://sublinkx.maple521.site/c/?token=679de2dec39061b030e24274c9d7ab42"
      
  流量光:
    type: http
    interval: 3600
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 60
    proxy: 🚅 直连
    url: "https://rgergergergerg6555.saojc.xyz/api/v1/client/subscribe?token=e9b01bcf4afa0d65a1ac1bd523ad53b4"
    
  院长:
    type: http
    interval: 3600
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 60
    proxy: 🚅 直连
    url: "https://sub.vip.sd/JPa6vvFgygVtNP2sGJ2r/download/nlmjj?target=Clash"

# 全局配置
allow-lan: true
mode: rule
log-level: error
ipv6: false # 禁用 IPv6，避免泄露
find-process-mode: off
profile:
  store-selected: true
  store-fake-ip: false # redir-host 模式下不需要 fake-ip
unified-delay: true
tcp-concurrent: true
tcp-fast-open: true
global-client-fingerprint: chrome

# 端口
tproxy-port: 7893
port: 7890
socks-port: 7891
mixed-port: 10801
redir-port: 7892
global-ua: clash.meta
etag-support: true
geodata-mode: false
geodata-loader: memconservative
geo-auto-update: false
geo-update-interval: 24
geox-url:
  geoip: "https://fastly.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geoip.dat"
  geosite: "https://fastly.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geosite.dat"
  mmdb: "https://fastly.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geoip.metadb"

# 控制面板
external-controller: 0.0.0.0:9090
secret: "971212"
external-ui-name: MetaCubeXD
external-ui: ui
external-ui-url: "https://github.maple521.site/https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip"

# 流量嗅探
sniffer:
  enable: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  skip-domain:
    - "Mijia Cloud"
    - "+.push.apple.com"

# DNS 模块（redir-host 模式）
dns:
  enable: true
  ipv6: false # 禁用 IPv6，避免泄露
  listen: 0.0.0.0:53 # 监听本地 DNS 请求
  enhanced-mode: redir-host
  default-nameserver:
    - 223.5.5.5
    - 119.29.29.29
  nameserver:
    - 223.5.5.5
    - 119.29.29.29
  proxy-server-nameserver:
    - 223.5.5.5
    - 119.29.29.29
  nameserver-policy:
    "rule-set:cn_domain,private_domain,rule-direct_domain":
      - 223.5.5.5
      - 119.29.29.29
    "rule-set:geolocation-!cn,rule-proxy_domain":
      - "https://dns.cloudflare.com/dns-query" # 使用 DoH
      - "https://dns.google/dns-query" # 使用 DoH

# Tun 配置
tun:
  enable: true
  stack: system
  dns-hijack:
    - "any:53" # 劫持所有 DNS 查询
  auto-route: true
  auto-redirect: true
  auto-detect-interface: true

# 代理节点
proxies:
- name: "🚅 直连"
  type: direct
  udp: true

# 锚点
pr: &pr {type: select, proxies: [🛸 代理, 🇭🇰 香港节点, 🇭🇰 香港流媒体, 🇸🇬 新加坡节点, 🇨🇳 台湾节点, 🇺🇸 美国节点, 🇰🇷 韩国节点, 🇯🇵 日本节点, 🇩🇪 德国节点, 🇳🇱 荷兰节点, 🌐 全部节点, 🚅 直连]}

# 策略组
proxy-groups:
  - {name: 🛸 代理, type: select, proxies: [🇭🇰 香港节点, 🇭🇰 香港流媒体, 🇸🇬 新加坡节点, 🇨🇳 台湾节点, 🇺🇸 美国节点, 🇰🇷 韩国节点, 🇯🇵 日本节点, 🇩🇪 德国节点, 🇳🇱 荷兰节点, 🌐 全部节点, 🚅 直连]}
  - {name: 👀 Google,!!merge <<: *pr}
  - {name: 🤖 ChatGPT,!!merge <<: *pr}
  - {name: 🎵 TikTok,!!merge <<: *pr}
  - {name: 📲 Telegram,!!merge <<: *pr}
  - {name: 🎥 Netflix,!!merge <<: *pr}
  - {name: 🎥 Disney,!!merge <<: *pr}
  - {name: 🚧 兜底,!!merge <<: *pr}
  - {name: 🇭🇰 香港节点, type: select, include-all: true, filter: "(?i)港|hk|hongkong|hong kong"}
  - {name: 🇭🇰 香港流媒体, type: select, include-all: true, filter: "(?i)港|hk|hongkong|hong kong"}
  - {name: 🇸🇬 新加坡节点, type: select, include-all: true, filter: "(?i)新|sg|singapore"}
  - {name: 🇨🇳 台湾节点, type: select, include-all: true, filter: "(?i)台|tw|taiwan"}
  - {name: 🇰🇷 韩国节点, type: select, include-all: true, filter: "(?i)韩|kr|korea|seoul"}
  - {name: 🇯🇵 日本节点, type: select, include-all: true, filter: "(?i)日|jp|japan"}
  - {name: 🇺🇸 美国节点, type: select, include-all: true, filter: "(?i)美|us|unitedstates|united states"}
  - {name: 🇩🇪 德国节点, type: select, include-all: true, filter: "(?i)德|de|Deutschland"}
  - {name: 🇳🇱 荷兰节点, type: select, include-all: true, filter: "(?i)荷|nl|Nederland"}
  - {name: 🌐 全部节点, type: select, include-all: true}

# 规则部分（优化顺序）
rules:
  # 特定服务规则（优先处理）
  - RULE-SET,tiktok_domain,🎵 TikTok
  - RULE-SET,netflix_domain,🎥 Netflix
  - RULE-SET,disney_domain,🎥 Disney
  - RULE-SET,telegram_domain,📲 Telegram
  - RULE-SET,openai,🤖 ChatGPT
  - RULE-SET,google_domain,👀 Google
  - RULE-SET,geolocation-!cn,🛸 代理
  - RULE-SET,rule-proxy_domain,🛸 代理

  # IP 规则（避免 DNS 解析冲突）
  - RULE-SET,netflix_ip,🎥 Netflix,no-resolve
  - RULE-SET,telegram_ip,📲 Telegram,no-resolve
  - RULE-SET,google_ip,👀 Google,no-resolve

  # 直连规则（放在后面，避免覆盖代理规则）
  - RULE-SET,private_domain,🚅 直连
  - RULE-SET,cn_domain,🚅 直连
  - RULE-SET,rule-direct_domain,🚅 直连
  - RULE-SET,cn_ip,🚅 直连

  # 兜底规则（最后处理）
  - MATCH,🚧 兜底

# 规则提供者
rule-providers:
  rule-direct_domain: {type: http, interval: 86400, behavior: domain, format: text, url: "https://github.maple521.site/https://raw.githubusercontent.com/Maple-Ling/maple/refs/heads/main/Mihomo/rule-direct.list"}
  rule-proxy_domain: {type: http, interval: 86400, behavior: domain, format: text, url: "https://github.maple521.site/https://raw.githubusercontent.com/Maple-Ling/maple/refs/heads/main/Mihomo/rule-proxy.list"}
  openai: {type: http, interval: 86400, behavior: domain, format: mrs, url: "https://github.maple521.site/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/openai.mrs"}
  private_domain: {type: http, interval: 86400, behavior: domain, format: mrs, url: "https://github.maple521.site/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.mrs"}
  geolocation-!cn: {type: http, interval: 86400, behavior: domain, format: mrs, url: "https://github.maple521.site/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/geolocation-!cn.mrs"}
  google_domain: {type: http, interval: 86400, behavior: domain, format: mrs, url: "https://github.maple521.site/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/google.mrs"}
  telegram_domain: {type: http, interval: 86400, behavior: domain, format: mrs, url: "https://github.maple521.site/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/telegram.mrs"}
  netflix_domain: {type: http, interval: 86400, behavior: domain, format: mrs, url: "https://github.maple521.site/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/netflix.mrs"}
  disney_domain: {type: http, interval: 86400, behavior: domain, format: mrs, url: "https://github.maple521.site/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/disney.mrs"}
  tiktok_domain: {type: http, interval: 86400, behavior: domain, format: mrs, url: "https://github.maple521.site/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/tiktok.mrs"}
  cn_domain: {type: http, interval: 86400, behavior: domain, format: mrs, url: "https://github.maple521.site/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.mrs"}
  cn_ip: {type: http, interval: 86400, behavior: ipcidr, format: mrs, url: "https://github.maple521.site/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.mrs"}
  private_ip: {type: http, interval: 86400, behavior: ipcidr, format: mrs, url: "https://github.maple521.site/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/private.mrs"}
  google_ip: {type: http, interval: 86400, behavior: ipcidr, format: mrs, url: "https://github.maple521.site/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/google.mrs"}
  telegram_ip: {type: http, interval: 86400, behavior: ipcidr, format: mrs, url: "https://github.maple521.site/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/telegram.mrs"}
  netflix_ip: {type: http, interval: 86400, behavior: ipcidr, format: mrs, url: "https://github.maple521.site/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/netflix.mrs"}